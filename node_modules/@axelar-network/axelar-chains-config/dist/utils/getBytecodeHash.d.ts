/**
 * Compute bytecode hash for a deployed contract or contract factory as it would appear on-chain.
 * Some chains don't use keccak256 for their state representation, which is taken into account by this function.
 * @param {Object} contractObject - An instance of the contract or a contract factory (ethers.js Contract or ContractFactory object)
 * @returns {Promise<string>} - The keccak256 hash of the contract bytecode
 */
export function getBytecodeHash(contractObject: any, chain?: string, provider?: any): Promise<string>;
//# sourceMappingURL=getBytecodeHash.d.ts.map