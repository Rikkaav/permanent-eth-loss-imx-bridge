'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findNodeModulesPath = exports.findAxelarFramework = exports.getAptosLogID = void 0;
const ethers_1 = require("ethers");
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const getAptosLogID = (chain, event) => {
    return ethers_1.ethers.utils.id(chain + ':' + event.guid.account_address + ':' + event.version + ':' + event.sequence_number);
};
exports.getAptosLogID = getAptosLogID;
const findAxelarFramework = (currentDir) => {
    const node_module = (0, exports.findNodeModulesPath)(currentDir);
    const dirs = fs_1.default.readdirSync(node_module);
    if (dirs.indexOf('@axelar-network') > -1) {
        const axelarDirs = fs_1.default.readdirSync(path_1.default.join(node_module, '@axelar-network'));
        if (axelarDirs.indexOf('axelar-cgp-aptos') > -1) {
            return path_1.default.join(node_module, '@axelar-network', 'axelar-cgp-aptos', 'aptos', 'modules', 'axelar', 'build', 'AxelarFramework');
        }
    }
    return (0, exports.findAxelarFramework)(path_1.default.join(currentDir, '..'));
};
exports.findAxelarFramework = findAxelarFramework;
const findNodeModulesPath = (currentDir) => {
    const dirs = fs_1.default.readdirSync(currentDir);
    if (dirs.indexOf('node_modules') > -1) {
        return path_1.default.join(currentDir, 'node_modules');
    }
    return (0, exports.findNodeModulesPath)(path_1.default.join(currentDir, '..'));
};
exports.findNodeModulesPath = findNodeModulesPath;
//# sourceMappingURL=utils.js.map