{"abi":[{"type":"function","name":"onMessageReceive","inputs":[{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5060e18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80637248c77c14602d575b600080fd5b603c6038366004603e565b5050565b005b60008060208385031215605057600080fd5b823567ffffffffffffffff80821115606757600080fd5b818501915085601f830112607a57600080fd5b813581811115608857600080fd5b866020828501011115609957600080fd5b6020929092019691955090935050505056fea26469706673582212207217bd5ea02c374d063e9d6741afbc3e3623df50806bfbe76c942744d24b5ee864736f6c63430008130033","sourceMap":"64:91:170:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052348015600f57600080fd5b506004361060285760003560e01c80637248c77c14602d575b600080fd5b603c6038366004603e565b5050565b005b60008060208385031215605057600080fd5b823567ffffffffffffffff80821115606757600080fd5b818501915085601f830112607a57600080fd5b813581811115608857600080fd5b866020828501011115609957600080fd5b6020929092019691955090935050505056fea26469706673582212207217bd5ea02c374d063e9d6741afbc3e3623df50806bfbe76c942744d24b5ee864736f6c63430008130033","sourceMap":"64:91:170:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:53;;;;;;:::i;:::-;;;;;;14:591:199;84:6;92;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;201:9;188:23;230:18;271:2;263:6;260:14;257:34;;;287:1;284;277:12;257:34;325:6;314:9;310:22;300:32;;370:7;363:4;359:2;355:13;351:27;341:55;;392:1;389;382:12;341:55;432:2;419:16;458:2;450:6;447:14;444:34;;;474:1;471;464:12;444:34;519:7;514:2;505:6;501:2;497:15;493:24;490:37;487:57;;;540:1;537;530:12;487:57;571:2;563:11;;;;;593:6;;-1:-1:-1;14:591:199;;-1:-1:-1;;;;14:591:199:o","linkReferences":{}},"methodIdentifiers":{"onMessageReceive(bytes)":"7248c77c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onMessageReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/child/MockChildERC20Bridge.sol\":\"MockChildERC20Bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-cgp-solidity/=lib/axelar-cgp-solidity/\",\":@axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@perimetersec/fuzzlib/src/=node_modules/@perimetersec/fuzzlib/src/\",\":axelar-cgp-solidity/=lib/axelar-cgp-solidity/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"test/mocks/child/MockChildERC20Bridge.sol\":{\"keccak256\":\"0xccdfbbfc7d2517aea895a74a75500b67bf12f51d73b4754b89156e9deffb150a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://46028a1a9169dfe7d3cd7e9d8970b53b0ed751b25f88a3bc4deb1620b57e35ce\",\"dweb:/ipfs/QmXoUWPziAMAW5f8jh8U2jUA3UxRicu3S5QD32jPSQzKU6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onMessageReceive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@axelar-cgp-solidity/=lib/axelar-cgp-solidity/","@axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/","@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@perimetersec/fuzzlib/src/=node_modules/@perimetersec/fuzzlib/src/","axelar-cgp-solidity/=lib/axelar-cgp-solidity/contracts/","axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/mocks/child/MockChildERC20Bridge.sol":"MockChildERC20Bridge"},"evmVersion":"paris","libraries":{}},"sources":{"test/mocks/child/MockChildERC20Bridge.sol":{"keccak256":"0xccdfbbfc7d2517aea895a74a75500b67bf12f51d73b4754b89156e9deffb150a","urls":["bzz-raw://46028a1a9169dfe7d3cd7e9d8970b53b0ed751b25f88a3bc4deb1620b57e35ce","dweb:/ipfs/QmXoUWPziAMAW5f8jh8U2jUA3UxRicu3S5QD32jPSQzKU6"],"license":"Apache 2.0"}},"version":1},"id":170}