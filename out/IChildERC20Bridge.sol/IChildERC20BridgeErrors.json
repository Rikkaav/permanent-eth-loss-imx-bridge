{"abi":[{"type":"error","name":"AlreadyMapped","inputs":[]},{"type":"error","name":"BalanceInvariantCheckFailed","inputs":[{"name":"actualBalance","type":"uint256","internalType":"uint256"},{"name":"expectedBalance","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"BridgeNotSet","inputs":[]},{"type":"error","name":"BurnFailed","inputs":[]},{"type":"error","name":"CantMapETH","inputs":[]},{"type":"error","name":"CantMapIMX","inputs":[]},{"type":"error","name":"EmptyTokenContract","inputs":[]},{"type":"error","name":"IncorrectBridgeAddress","inputs":[]},{"type":"error","name":"InsufficientIMX","inputs":[]},{"type":"error","name":"InsufficientValue","inputs":[]},{"type":"error","name":"InvalidData","inputs":[{"name":"reason","type":"string","internalType":"string"}]},{"type":"error","name":"MintFailed","inputs":[]},{"type":"error","name":"NoGas","inputs":[]},{"type":"error","name":"NonWrappedNativeTransfer","inputs":[]},{"type":"error","name":"NotBridgeAdaptor","inputs":[]},{"type":"error","name":"NotMapped","inputs":[]},{"type":"error","name":"TransferWIMXFailed","inputs":[]},{"type":"error","name":"UnauthorizedInitializer","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroAddressRootToken","inputs":[]},{"type":"error","name":"ZeroAmount","inputs":[]},{"type":"error","name":"ZeroValue","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyMapped\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantCheckFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BridgeNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BurnFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantMapETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantMapIMX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyTokenContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectBridgeAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientIMX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonWrappedNativeTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBridgeAdaptor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMapped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferWIMXFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedInitializer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressRootToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValue\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyMapped()\":[{\"notice\":\"Error when a token is already mapped.\"}],\"BalanceInvariantCheckFailed(uint256,uint256)\":[{\"notice\":\"Error when token balance invariant check fails.\"}],\"BridgeNotSet()\":[{\"notice\":\"Error when a given child token's bridge address is not set.\"}],\"BurnFailed()\":[{\"notice\":\"Error when a call to the given child token's `burn` function fails.\"}],\"CantMapETH()\":[{\"notice\":\"Error when attempting to map ETH.\"}],\"CantMapIMX()\":[{\"notice\":\"Error when attempting to map IMX.\"}],\"EmptyTokenContract()\":[{\"notice\":\"Error when the contract to mint had no bytecode.\"}],\"IncorrectBridgeAddress()\":[{\"notice\":\"Error when a given child token's bridge address is incorrect.\"}],\"InsufficientIMX()\":[{\"notice\":\"Error when the bridge doesn't have enough native IMX to support the deposit.\"}],\"InsufficientValue()\":[{\"notice\":\"Error when the amount requested is less than the value sent.\"}],\"InvalidData(string)\":[{\"notice\":\"Error when the message's payload is not valid.\"}],\"MintFailed()\":[{\"notice\":\"Error when the mint operation failed.\"}],\"NoGas()\":[{\"notice\":\"Error when a message is sent with no gas payment.\"}],\"NonWrappedNativeTransfer()\":[{\"notice\":\"Error when native transfer is sent to contract from non wrapped-token address.\"}],\"NotBridgeAdaptor()\":[{\"notice\":\"Error when a message is given to the bridge from an address not the designated bridge adaptor.\"}],\"NotMapped()\":[{\"notice\":\"Error when a token is not mapped.\"}],\"TransferWIMXFailed()\":[{\"notice\":\"Error when a call to WIMX token's `transferFrom` fails.\"}],\"UnauthorizedInitializer()\":[{\"notice\":\"Error when the an unauthorized initializer tries to initialize the contract.\"}],\"ZeroAddress()\":[{\"notice\":\"Error when a zero address is given when not valid.\"}],\"ZeroAddressRootToken()\":[{\"notice\":\"Error when a given child token's root token is the zero address.\"}],\"ZeroAmount()\":[{\"notice\":\"Error when the withdrawal amount is zero\"}],\"ZeroValue()\":[{\"notice\":\"Error when a zero msg.value is supplied.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Child ERC20 Bridge ErrorsDefines error types emitted by a Child ERC20 Bridge implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/child/IChildERC20Bridge.sol\":\"IChildERC20BridgeErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-cgp-solidity/=lib/axelar-cgp-solidity/\",\":@axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@perimetersec/fuzzlib/src/=node_modules/@perimetersec/fuzzlib/src/\",\":axelar-cgp-solidity/=lib/axelar-cgp-solidity/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"src/interfaces/child/IChildERC20.sol\":{\"keccak256\":\"0x51669da1e86c8e2c3553fd2092ba5457a8ecee91f1aeb78bbb201fc2428b2ac4\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://dc98a38c632913e123441b0f1b2b43e5e88baf6c574844f2e1e2b7bf53d9b737\",\"dweb:/ipfs/Qmf92nf9KSS1DaQ3UQcUz7j3wyZ48QyBFz4LfYFb3ukpFS\"]},\"src/interfaces/child/IChildERC20Bridge.sol\":{\"keccak256\":\"0x697cee10797ae8b80914f6243ed4693ec6c8a296b66b8dddb113ad98f7b00b99\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://77eab9f1c814ee910d87fa199e88c5e014e74af40f3f537150bf011f9ee911df\",\"dweb:/ipfs/QmRu1txeizhWxr76rFhWbUFUfB3QtruLpBKSxRMYkX8EQz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyMapped"},{"inputs":[{"internalType":"uint256","name":"actualBalance","type":"uint256"},{"internalType":"uint256","name":"expectedBalance","type":"uint256"}],"type":"error","name":"BalanceInvariantCheckFailed"},{"inputs":[],"type":"error","name":"BridgeNotSet"},{"inputs":[],"type":"error","name":"BurnFailed"},{"inputs":[],"type":"error","name":"CantMapETH"},{"inputs":[],"type":"error","name":"CantMapIMX"},{"inputs":[],"type":"error","name":"EmptyTokenContract"},{"inputs":[],"type":"error","name":"IncorrectBridgeAddress"},{"inputs":[],"type":"error","name":"InsufficientIMX"},{"inputs":[],"type":"error","name":"InsufficientValue"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"type":"error","name":"InvalidData"},{"inputs":[],"type":"error","name":"MintFailed"},{"inputs":[],"type":"error","name":"NoGas"},{"inputs":[],"type":"error","name":"NonWrappedNativeTransfer"},{"inputs":[],"type":"error","name":"NotBridgeAdaptor"},{"inputs":[],"type":"error","name":"NotMapped"},{"inputs":[],"type":"error","name":"TransferWIMXFailed"},{"inputs":[],"type":"error","name":"UnauthorizedInitializer"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroAddressRootToken"},{"inputs":[],"type":"error","name":"ZeroAmount"},{"inputs":[],"type":"error","name":"ZeroValue"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@axelar-cgp-solidity/=lib/axelar-cgp-solidity/","@axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/","@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@perimetersec/fuzzlib/src/=node_modules/@perimetersec/fuzzlib/src/","axelar-cgp-solidity/=lib/axelar-cgp-solidity/contracts/","axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/child/IChildERC20Bridge.sol":"IChildERC20BridgeErrors"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f","urls":["bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f","dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"keccak256":"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb","urls":["bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d","dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"],"license":"MIT"},"src/interfaces/child/IChildERC20.sol":{"keccak256":"0x51669da1e86c8e2c3553fd2092ba5457a8ecee91f1aeb78bbb201fc2428b2ac4","urls":["bzz-raw://dc98a38c632913e123441b0f1b2b43e5e88baf6c574844f2e1e2b7bf53d9b737","dweb:/ipfs/Qmf92nf9KSS1DaQ3UQcUz7j3wyZ48QyBFz4LfYFb3ukpFS"],"license":"Apache 2.0"},"src/interfaces/child/IChildERC20Bridge.sol":{"keccak256":"0x697cee10797ae8b80914f6243ed4693ec6c8a296b66b8dddb113ad98f7b00b99","urls":["bzz-raw://77eab9f1c814ee910d87fa199e88c5e014e74af40f3f537150bf011f9ee911df","dweb:/ipfs/QmRu1txeizhWxr76rFhWbUFUfB3QtruLpBKSxRMYkX8EQz"],"license":"Apache 2.0"}},"version":1},"id":61}